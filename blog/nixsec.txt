(The Thinkin')=========================

I was thinking to myself the other day, nix makes configuration super easy and super rigid(e.g. switches won't magically un-flip), so that makes it ideal for security. Here I've provided a pretty simple sample configuration of a good nixos security profile for a server or computer of interest. I daily drove this for a week with no complaints(however, I'm no "gamer"), so it should be minimally annoying to you, and maximally assauge your main-character complex that some nefarious force is out ta GETCHA. You should probably enable disk encryption too, honestly that's the best thing you could do. Enuf jabber let's get on to the implementation

(The Doin')============================

Add these files to your /etc/nixos/, and include them at the top of your configuration.nix

(sysctl.nix)
"""
{ pkgs, ... }:

let

in
{
  #kernelPackages = pkgs.linuxPackages_hardened;
  boot.kernel.sysctl = {
    "kernel.kptr_restrict" = 2;
    "kernel.dmesg_restrict" = 1;
    "kernel.printk" = "3 3 3 3";
    "kernel.unprivileged_bpf_disabled" = 1;
    "net.core.bpf_jit_harden" = 2;
    "kernel.ftrace_enabled" = 0;
    "dev.tty.ldisc_autoload" = 0;
    "vm.unprivileged_userfaultfd" = 0;
    "kernel.kexec_load_disabled" = 1;
    "kernel.sysrq" = 20; # SAK+sync
    #"kernel.unprivileged_userns_clone" = 0;  # Required by flatpak
    "kernel.perf_event_paranoid" = 3;
    "net.ipv4.tcp_rfc1337" = 1;
    "net.ipv4.conf.all.log_martians" = 1;
    "net.ipv4.conf.all.rp_filter" = 1;
    "net.ipv4.conf.default.log_martians" = 1;
    "net.ipv4.conf.default.rp_filter" = 1;
    "net.ipv4.conf.all.accept_redirects" = 0;
    "net.ipv4.conf.default.accept_redirects" = 0;
    "net.ipv4.conf.all.secure_redirects" = 0;
    "net.ipv4.conf.default.secure_redirects" = 0;
    "net.ipv6.conf.all.accept_redirects" = 0;
    "net.ipv6.conf.default.accept_redirects" = 0;
    "net.ipv4.conf.all.send_redirects" = 0;
    "net.ipv4.conf.default.send_redirects" = 0;
    "net.ipv4.icmp_echo_ignore_broadcasts" = 1;
    "net.ipv4.tcp_sack" = 0;
    "net.ipv4.tcp_dsack" = 0;
    "kernel.yama.ptrace_scope" = 2;
    "fs.protected_fifos" = 2;
    "fs.protected_regular" = 2;

    # x86. may differ on other architectures. FIXME only apply on x86
    # TODO add other archs
    "vm.mmap_rnd_bits" = 32;
    "vm.mmap_rnd_compat_bits" = 16;
  };
}
"""

(security.nix)

"""
{ config, ... }:

{
  boot.kernelParams = [
    "intel_pstate=no_hwp"
    "slab_nomerge"
    "init_on_alloc=1"
    "init_on_free=1"
    "page_alloc.shuffle=1"
    "randomize_kstack_offset=on"
    "vsyscall=none"
    "debugfs=off"
    "oops=panic" # Too strong?
    #"module.sig_enforce=1"
    #"lockdown=confidentiality"
    "mce=0"
    "quiet"
    "loglevel=0"
    "intel_iommu=on" # Having both OK
    "efi=disable_early_pci_dma"
    # TODO apply per-machine based on cpu
    #"spectre_v2=on"
    #"spec_store_bypass_disable=on"
    #"tsx=off"
    #"tsx_async_abort=full,nosmt"
    #"mds=full,nosmt"
    #"l1tf=full,force"
    #"nosmt=force"
    #"kvm.nx_huge_pages=force"
  ];

  #use a ntp sync daemon
  services.openntpd = {
    enable = true;
    servers = [
      "time.apple.com"
      "time.cloudflare.com"
      "pool.ntp.org"
    ];
  };

  security.protectKernelImage = true; # kernel.kexec_load_disabled=1 and nohibernate
  #security.forcePageTableIsolation = true;
  security.unprivilegedUsernsClone = true;
  security.virtualisation.flushL1DataCache = "always";
  security.apparmor.enable = true;
  security.apparmor.killUnconfinedConfinables = true;

  nix.settings.auto-optimise-store = true;

  systemd.tmpfiles.rules = [
    "e /nix/var/log - - - 30d"
  ];

  zramSwap.enable = true;
}
"""
